/**
 * @author Holmes Bryant <https://github.com/HolmesBryant>
 * @license GPL-3.0
 */
export class WijitMenu extends HTMLElement{#e=!1;#t="auto";#l=".5s";#i="default";#o=new AbortController;#r=new Set;#n;defaultStyleId="wijit-menu-default-styles";static allowed={expand:new Set([null,"","true",!0,"false",!1]),type:new Set([null,"","custom","oldschool","ribbon","sitemap"])};static observedAttributes=["expand","height","speed","type"];constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=` <style> :host {--bg1-color: transparent; --bg2-color: whitesmoke; --bg3-color: white; --border-color: silver; --text-color: rgb(60,60,60); --accent: skyblue; --menu-height: ${this.height}; --speed: ${this.speed}; width: 100%; } @media (prefers-color-scheme: dark) {:host {--bg1-color: transparent; --bg2-color: rgb(40,40,40); --bg3-color: rgb(60, 60, 60); --border-color: dimgray; --text-color: rgb(240, 240, 240); --accent: dodgerblue; } } @media (pointer: fine) {.ribbon li:hover > label input[type=checkbox], .ribbon li:hover > label input[type=radio], .oldschool li:hover > label input[type=checkbox], .oldschool li:hover > label input[type=radio] { transform: rotate(90deg); } .ribbon li:has(label):hover > ul, .ribbon li:has(label):hover > menu, .oldschool li:has(label):hover > ul, .oldschool li:has(label):hover > menu {flex: 1; max-height: 300vh; overflow: visible; z-index: 1; } } @media all and (max-width: 500px) {a, label, ul, menu { width: 100%; } li { flex-direction: column; } ul, menu, li:first-child, li:last-child { border-radius: 0 } .oldschool li { position: static; } .oldschool { position: relative; } .oldschool li > menu, .oldschool li > ul {left: 0; top: 100%; width: 100%; } .oldschool li li > menu, .oldschool li li > ul {left: 0; top: 100%; } } @media all and (min-width: 501px) {ul ul, menu menu { border-radius: 1rem 0 0 1rem; } li:first-child { border-radius: 1rem 0 0 0; } li:last-child { border-radius: 0 0 0 1rem; } .oldschool li { position: relative; } .oldschool li > menu, .oldschool li > ul {top: 99%; width: max-content; } .oldschool li li > menu, .oldschool li li > ul {left: 100%; top: 0; } } .default {/****** Backgrounds ******/ background-color: var(--bg1-color); li menu, li ul, li menu menu menu, li ul ul ul { background-color: var(--bg3-color) } li menu menu, li ul ul { background-color: var(--bg2-color) } li:not(:has(input:checked)):hover {background-image: linear-gradient(to bottom, rgba(255,255,255,0.1), rgba(0,0,0,0.1)); } li:not(:has(input:checked)):active {background-image: linear-gradient(to top, rgba(255,255,255,0.1), rgba(0,0,0,0.1)); } /****** Borders ******/ label > a { border: 1px dotted var(--border-color); } li > menu, li > ul { border: solid var(--border-color); } li { border: solid var(--border-color); } li > menu, li > ul { border-width: 0; } li, label:has(input:checked) + menu li { border-width: 1px 0 0 0; } li:first-child { border-width: 0; } /****** Text ******/ a, input[type=checkbox], input[type=radio] { color: var(--text-color) } a:hover, label:hover, label:hover > a, label:hover input { color: var(--accent); } a, input[type=checkbox], input[type=radio], label { font-weight: bold; } input[type=checkbox], input[type=radio] { font-size: 1.5rem } a { text-decoration: none } a:hover { text-decoration: underline; } /****** Shadows ******/ li > menu, li > ul { box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5); } a[href]:active {box-shadow: inset 1px 1px 5px black; } /****** Cursors ******/ li, label, input[type=checkbox], input[type=radio] { cursor: pointer } /****** Structure ******/ width: 100%; list-style: none; margin: 0; padding: 0; a {text-align: left; flex: 1; padding: .5rem; min-width: max-content; } input[type=checkbox], input[type=radio] {appearance: none; aspect-ratio: 1/1; display: inline-block; margin: .5rem; position: relative; transition: all .25s; vertical-align: middle; width: 1.5rem; } input[type=checkbox]:checked, input[type=radio]:checked { transform: rotate(90deg); } input[type=checkbox]:before, input[type=radio]:before {align-items: center; content: "â–¶"; display: flex; justify-content: center; position: absolute; top: 0; bottom: 0; left: 0; right: 0; } label a { flex:0 } label {align-items: center; display: flex; flex: 2; justify-content: start; padding: 0 .5rem; transition: all var(--speed); } label:has(input:checked) {align-self: stretch; flex: 0; } label:has(input) + menu, label:has(input) + ul {flex: 0; max-height: 0vh; } label:has(input:checked) + menu, label:has(input:checked) + ul {flex: 2; max-height: 300vh; z-index: 1; } li {align-items: center; box-sizing: border-box; display: flex; min-height: var(--menu-height); } li:not(:has(label)) {padding: 0 1rem; } menu, ul {display: flex; flex-direction: column; list-style: none; margin: 0; padding: 0; overflow: hidden; flex: 0; transition: all var(--speed); } menu menu, ul ul {max-height: 0vh; } &.inset {li > menu, li > ul { box-shadow: inset 5px 5px 10px rgba(0, 0, 0, 0.5); } } /** .inset **/ &.ribbon {/****** Borders ******/ & li { border-width: 0 0 0 1px; } & > ul, & > menu, & li > ul, & li > menu, & li:first-child { border-width: 0; } & li:has(label):hover > menu, & li:has(label):hover > ul, & label:has(input:checked) + menu, & label:has(input:checked) + ul { border: 1px solid var(--border-color); } & li, & li li:first-child { border-radius: 0 } & menu, & ul { border-radius: .5rem } & > menu > li:first-child, & > ul > li:first-child { border-radius: .5rem 0 0 .5rem } & > menu > li:last-child, & > ul > li:last-child { border-radius: 0 .5rem .5rem 0 } /****** Structure ******/ display: flex; flex-direction: row; flex-wrap: wrap; justify-content: center; position: relative; & label {flex: 1; justify-content: center; } & label:has(input):hover, & label:has(input:checked) { flex: 1; } & label:has(input:checked) + menu, & label:has(input:checked) + ul {flex: 1; max-height: 300vh; overflow: visible; z-index: 1; } & li > menu, & li > ul {left: 0; overflow: hidden; position: absolute; top: 99%; width: 100%; } & menu, & ul {display: flex; flex-direction: row; flex-wrap: wrap; justify-content: center; overflow: visible; position: relative; } } /** .ribbon **/ &.oldschool {/****** Borders ******/ & li:has(label):hover > menu, & li:has(label):hover > ul, & label:has(input:checked) + menu, & label:has(input:checked) + ul { border: 1px solid var(--border-color); } & > menu > li, & > ul > li { border-width: 0 0 0 1px; } & li { border-width: 0 0 1px 0; } & > ul, & > menu, & li > ul, & li > menu, & > menu > li:first-child, & > ul > li:first-child { border-width: 0; } & li, & li li:first-child { border-radius: 0 } & > menu > li:first-child, & > ul > li:first-child { border-radius: .5rem 0 0 .5rem } & > menu > li:last-child, & > ul > li:last-child { border-radius: 0 .5rem .5rem 0 } & menu, & ul { border-radius: .5rem } /****** Structure ******/ display: flex; flex-direction: row; flex-wrap: wrap; justify-content: center; position: relative; & label {flex: 1; justify-content: start; } & label:has(input):hover, & label:has(input:checked) { flex: 1; } & label:has(input:checked) + menu, & label:has(input:checked) + ul {flex: 1; max-height: 300vh; overflow: visible; } & li > menu, & li > ul {flex-direction: column; overflow: hidden; position: absolute; z-index: 1; } & > menu, & > ul {display: flex; flex-wrap: wrap; justify-content: center; overflow: visible; flex-direction: row; } } /** .oldschool **/ } /** default **/ .sitemap {--height: var(--menu-height); /**** Borders ****/ border-radius: 0; & li, & li > ul, & li > menu, & label > a {border: none; border-radius: 0; } /**** Text ****/ a { color: var(--text-color); } a:hover { color: var(--accent); } /**** Shadows ****/ li > menu, li > ul, a[href]:active { box-shadow: none } /**** Structure ****/ display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, max-content)); gap: 1rem; list-style: none; margin: 0; padding: 0; width: 100%; & input {display: none; } & menu {border: 1px dotted var(--border-color); display: flex; flex-direction: column; flex-wrap: wrap; max-height: var(--height); width: max-content; list-style: none; margin: 0; padding: 0; gap: .5rem; } & menu menu {border: none; } & menu menu menu {display: block; } } </style> <slot></slot> `}connectedCallback(){this.#n=new MutationObserver((e=>{this.observeMenu(e)})),this.init(),this.addDocumentClickHandler(),this.addListeners(),this.#n.observe(this,{childList:!0,subtree:!0})}disconnectedCallback(){this.#n.disconnect(),this.#o.abort()}attributeChangedCallback(e,t,l){if(WijitMenu.allowed[e]&&!WijitMenu.allowed[e].has(l)){const t=JSON.stringify(Array.from(WijitMenu.allowed[e].values()));return console.error(`Value of "${e}" must be one of ${t}. Value given was: ${l}`),!1}this[e]=l,this.sendEvent(e,t,l)}observeMenu(e){for(const t of e)for(const e of t.addedNodes)"li"===e.localName&&this.hasChildMenu(e)&&(this.hasLabel(e)||this.addLabel(e))}init(){let e;if(this.children[0].setAttribute("tabindex","0"),"custom"===this.type)e=this.querySelectorAll("li");else{this.shadowRoot.append(this.children[0]);this.shadowRoot.querySelector("menu, ul");this.replaceClassName(this.type),e=this.shadowRoot.querySelectorAll("li")}for(const t of e)this.hasChildMenu(t)&&(this.hasLabel(t)||this.addLabel(t))}hasChildMenu(e){if(!e)return;if(!e instanceof HTMLLIElement)return this.sendError("Argument for hasChildMenu() must be instance of HTMLLIElement",e);const t=["menu","ul"];for(const l of e.children)if(t.indexOf(l.localName)>-1)return!0;return!1}hasLabel(e){if(e){if(!e instanceof HTMLLIElement)return this.sendError("Argument for hasLabel() must be instance of HTMLLIElement",e);for(const t of e.children)if("label"===t.localName)return!0;return!1}}addLabel(e){if(!e)return;if(!e instanceof HTMLLIElement)return this.sendError("Argument for addLabel() must be instance of HTMLLIElement",e);const t=document.createElement("label"),l=document.createElement("input"),i=this.getFirstTextOrLink(e);return l.type="checkbox",l.name="wm-checkbox",l.setAttribute("hidden",!0),this.#r.add(l),this.expand&&(l.checked=!0),t.append(l),t.append(i),e.prepend(t),e}getFirstTextOrLink(e){if(e){if(!e instanceof HTMLLIElement)return this.sendError("Argument for getFirstText() must be instance of HTMLLIElement",e);for(const t of e.childNodes){if(t.nodeType===Node.TEXT_NODE&&""!==t.nodeValue.trim())return t;if("a"===t.localName)return t}return null}}addListeners(){"custom"===this.type?this.addEventListener("click",(e=>{"a"===e.target.localName&&this.closeMenu()}),{signal:this.#o.signal}):this.shadowRoot.addEventListener("click",(e=>{"a"===e.target.localName&&this.closeMenu()}),{signal:this.#o.signal})}addDocumentClickHandler(){document.body.addEventListener("click",(e=>{e.target.closest(this.localName)||this.closeMenu()}),{signal:this.#o.signal})}closeMenu(){for(const e of this.#r)e.checked=!1}replaceClassName(e){const t=this.shadowRoot.querySelector("menu, ul");if(!t)return!1;"sitemap"!==e&&t.classList.add("default");for(const l of WijitMenu.allowed.type)t.classList.contains(l)?t.classList.replace(l,e):t.classList.add(e)}sendError(e,t){return console.error(`${e}. Value given was ${t}`),!1}sendEvent(e,t,l){const i=new CustomEvent("wijitChanged",{detail:{attr:e,old:t,new:l}});window.dispatchEvent(i)}get expand(){return this.#e}set expand(e){switch(e){case"false":case!1:e=!1;break;default:e=!0}this.#e=e}get height(){return this.#t}set height(e){this.#t=e,this.style.setProperty("--menu-height",e)}get speed(){return this.#l}set speed(e){/\d+$/.test(e)&&(e+="s"),this.#l=e,this.style.setProperty("--speed",e)}get type(){return this.#i}set type(e){this.#i=e,this.replaceClassName(e)}}document.addEventListener("DOMContentLoaded",(()=>{customElements.get("wijit-menu")||customElements.define("wijit-menu",WijitMenu)}));
