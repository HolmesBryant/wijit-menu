/**
 * @author Holmes Bryant <https://github.com/HolmesBryant>
 * @license GPL-3.0
 */
export class WijitMenu extends HTMLElement{#e;#t=!1;#i="auto";#l=!1;#n=".5s";#o="default";#r=new AbortController;#a=new Set;#s;defaultStyleId="wijit-menu-styles";static allowed={expand:new Set([null,"","true",!0,"false",!1]),nohover:new Set([null,"","true",!0,"false",!1]),type:new Set([null,"","default","custom","oldschool","ribbon","sitemap"])};static observedAttributes=["content","expand","height","nohover","speed","type"];constructor(){super()}connectedCallback(){this.#s=new MutationObserver((e=>{this.observeMenu(e)})),this.init(),this.addDocumentClickHandler(),this.addListeners(),this.setHover(!this.nohover),this.#s.observe(this,{childList:!0,subtree:!0})}disconnectedCallback(){this.#s.disconnect(),this.#r.abort()}attributeChangedCallback(e,t,i){if(WijitMenu.allowed[e]&&!WijitMenu.allowed[e].has(i)){const t=JSON.stringify(Array.from(WijitMenu.allowed[e].values()));return console.error(`Value of "${e}" must be one of ${t}. Value given was: ${i}`),!1}this[e]=i,this.sendEvent(e,t,i)}observeMenu(e){for(const t of e)for(const e of t.addedNodes)"li"===e.localName&&this.hasChildMenu(e)&&(this.hasLabel(e)||this.addLabel(e));this.replaceClassName(this.type)}init(){const e=this.querySelectorAll("li");"custom"!==this.type&&this.addStyles(),this.hasAttribute("type")||this.replaceClassName(this.type);for(const e of this.children)if("ul"===e.localName||"menu"===e.localName){e.setAttribute("tabindex","0");break}for(const t of e)this.hasChildMenu(t)&&(this.hasLabel(t)||this.addLabel(t))}hasChildMenu(e){if(!e)return;if(!e instanceof HTMLLIElement)return this.sendError("Argument for hasChildMenu() must be instance of HTMLLIElement",e);const t=["menu","ul"];for(const i of e.children)if(t.indexOf(i.localName)>-1)return!0;return!1}hasLabel(e){if(e){if(!e instanceof HTMLLIElement)return this.sendError("Argument for hasLabel() must be instance of HTMLLIElement",e);for(const t of e.children)if("label"===t.localName)return!0;return!1}}addLabel(e){if(!e)return;if(!e instanceof HTMLLIElement)return this.sendError("Argument for addLabel() must be instance of HTMLLIElement",e);const t=document.createElement("label"),i=document.createElement("input"),l=this.getFirstTextOrLink(e);return i.type="checkbox",i.name="wm-checkbox",i.setAttribute("hidden",!0),this.#a.add(i),this.expand&&(i.checked=!0),t.append(i),t.append(l),e.prepend(t),e}getFirstTextOrLink(e){if(e){if(!e instanceof HTMLLIElement)return this.sendError("Argument for getFirstText() must be instance of HTMLLIElement",e);for(const t of e.childNodes){if(t.nodeType===Node.TEXT_NODE&&""!==t.nodeValue.trim())return t;if("a"===t.localName)return t}return null}}replaceClassName(e){const t=this.querySelector("menu, ul");if(t){for(const e of WijitMenu.allowed.type)e&&t.classList.remove(e);e&&(t.classList.add(e),"sitemap"!==e&&"custom"!==e&&t.classList.add("default"))}}addStyles(){document.head.querySelector(`#${this.defaultStyleId}`)||document.head.append(this.defaultStyles())}addListeners(){this.addEventListener("click",(e=>{"a"===e.target.localName&&this.closeMenu(),"label"===e.target.localName&&this.closeAllBut(e.target)}),{signal:this.#r.signal})}addDocumentClickHandler(){document.body.addEventListener("click",(e=>{e.target.closest(this.localName)||this.closeMenu()}),{signal:this.#r.signal})}expandMenu(){for(const e of this.#a)e.checked=!0}closeMenu(){for(const e of this.#a)e.checked=!1}closeAllBut(e){const t=e.closest("ul")||e.closest("menu"),i=t.parentElement.querySelector("input"),l=e.querySelector("input");for(const e of this.#a)(e!==i&&e!==l||t.parentElement===this&&e!==l)&&(e.checked=!1)}setHover(e){const t=this.querySelector("ul, menu");t&&(e?t.classList.add("hover"):t.classList.remove("hover"))}sendError(e,t){return console.error(`${e}. Value given was ${t}`),!1}sendEvent(e,t,i){const l=new CustomEvent("wijitChanged",{detail:{attr:e,old:t,new:i}});window.dispatchEvent(l)}defaultStyles(){const e=document.createElement("style");return e.id=this.defaultStyleId,e.textContent=' @layer wijit-menu {wijit-menu {--bg1-color: transparent; --bg2-color: whitesmoke; --bg3-color: white; --border-color: silver; --hover-bg: linear-gradient(to bottom, rgba(255,255,255,0.1), rgba(0,0,0,0.1)); --active-bg: linear-gradient(to top, rgba(255,255,255,0.1), rgba(0,0,0,0.1)); --text-color: rgb(60,60,60); --accent: skyblue; --height: auto; --speed: .5s; display: inline-block; position: relative; width: 100%; z-index: 1; } @media (prefers-color-scheme: dark) {wijit-menu {--bg1-color: transparent; --bg2-color: rgb(60, 60, 60); --bg3-color: rgb(40, 40, 40); --border-color: dimgray; --text-color: rgb(240, 240, 240); --accent: dodgerblue; } } @media (pointer: fine) {wijit-menu .ribbon.hover li:hover > label input[name="wm-checkbox"], wijit-menu .oldschool.hover li:hover > label input[name="wm-checkbox"] { transform: rotate(90deg); } wijit-menu .ribbon.hover li:has(label):hover > ul, wijit-menu .ribbon.hover li:has(label):hover > menu, wijit-menu .oldschool.hover li:has(label):hover > ul, wijit-menu .oldschool.hover li:has(label):hover > menu {flex: 1; max-height: 200vh; overflow: visible; z-index: 1; } } @media screen and (max-width: 500px) {wijit-menu a, wijit-menu label, wijit-menu ul, wijit-menu menu { width: 100%; } wijit-menu li { flex-direction: column; } wijit-menu ul, wijit-menu menu, wijit-menu li:first-child, wijit-menu li:last-child { border-radius: 0 } wijit-menu .oldschool li { position: static; } wijit-menu .oldschool { position: relative; } wijit-menu .oldschool li > menu, wijit-menu .oldschool li > ul {left: 0; top: 100%; width: 100%; } wijit-menu .oldschool menu > li > menu, wijit-menu .oldschool ul > li > ul {left: 0 !important; top: 100% !important; } } @media screen and (min-width: 501px) {wijit-menu ul ul, wijit-menu menu menu { border-radius: 1rem 0 0 1rem; } wijit-menu li:first-child { border-radius: 1rem 0 0 0; } wijit-menu li:last-child { border-radius: 0 0 0 1rem; } wijit-menu.oldschool li { position: relative; } wijit-menu.oldschool li > menu, wijit-menu.oldschool li > ul {top: 0; width: max-content; } wijit-menu.oldschool li li > menu, wijit-menu.oldschool li li > ul {left: 100%; top: 0; } } wijit-menu .default {/****** Backgrounds ******/ background: var(--bg1-color); & li > ul, & li > menu { background: var(--bg2-color) } & ul > li > ul, & menu > li > menu { background: var(--bg3-color) } & li:not(:has(input:checked)):hover { background: var(--hover-bg); } & li:not(:has(input:checked)):active { background: var(--active-bg); } /****** Borders ******/ & label > a { border: 1px dotted var(--border-color); } & li > menu, & li > ul { border: solid var(--border-color); } & li { border: solid var(--border-color); } & li > menu, & li > ul { border-width: 0; } & li, & label:has(input:checked) + menu li { border-width: 1px 0 0 0; } & li:first-child { border-width: 0; } /****** Text ******/ & a, & li, & label, & input[name="wm-checkbox"] { color: var(--text-color) } & a:hover, & label:hover, & label:hover > a, & label:hover input[name="wm-checkbox"] { color: var(--accent); } & a, & label, & input[name="wm-checkbox"] { font-weight: bold; } & input[name="wm-checkbox"] { font-size: 1.5rem } & a { text-decoration: none } & a:hover { text-decoration: underline; } /****** Shadows ******/ & li > menu, & li > ul { box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5); } & a[href]:active {box-shadow: inset 1px 1px 5px black; } /****** Cursors ******/ & li, & label, & input[name="wm-checkbox"] { cursor: pointer } /****** Structure ******/ width: 100%; list-style: none; margin: 0; padding: 0; & a {align-content: center; text-align: left; flex: 1; padding: .5rem; min-width: max-content; } & input[name="wm-checkbox"] {appearance: none; aspect-ratio: 1/1; display: inline-block; margin: 0 .5rem 0 0; position: relative; transition: all .25s; vertical-align: middle; width: 1.5rem; } & input[name="wm-checkbox"]:checked { transform: rotate(90deg); } & input[name="wm-checkbox"]:before {align-items: center; content: "â–¶"; display: flex; justify-content: center; position: absolute; top: 0; bottom: 0; left: 0; right: 0; } & label a { flex:0 } & label {align-items: center; display: flex; flex: 2; justify-content: start; transition: all var(--speed); } & label:has(input:checked) {align-self: stretch; flex: 0; } & label:has(input) + menu, & label:has(input) + ul {flex: 0; max-height: 0vh; } & label:has(input:checked) + menu, & label:has(input:checked) + ul {flex: 2; max-height: 200vh; z-index: 1; } & li {align-items: normal; box-sizing: border-box; display: flex; min-height: var(--height); padding-left: 1rem; } & li:not(:has(label)) {padding: 0 1rem; } & menu, & ul {display: flex; flex-direction: column; list-style: none; margin: 0; padding: 0; overflow: hidden; flex: 0; transition: all var(--speed); } & menu menu, & ul ul {max-height: 0vh; } &.inset {li > menu, li > ul { box-shadow: inset 5px 5px 10px rgba(0, 0, 0, 0.5); } } /** .inset **/ &.ribbon {/****** Borders ******/ & li { border-width: 0 0 0 1px; } & > ul, & > menu, & li > ul, & li > menu, & li:first-child { border-width: 0; } & li:has(label):hover > menu, & li:has(label):hover > ul, & label:has(input:checked) + menu, & label:has(input:checked) + ul { border: 1px solid var(--border-color); } & li, & li li:first-child { border-radius: 0 } & menu, & ul { border-radius: .5rem } & > menu > li:first-child, & > ul > li:first-child { border-radius: .5rem 0 0 .5rem } & > menu > li:last-child, & > ul > li:last-child { border-radius: 0 .5rem .5rem 0 } /****** Structure ******/ display: flex; flex-direction: row; flex-wrap: wrap; justify-content: center; position: relative; & a {text-align: center; } & label {flex: 1; justify-content: center; } & label:has(input):hover, & label:has(input:checked) { flex: 1; } & label:has(input:checked) + menu, & label:has(input:checked) + ul {flex: 1; max-height: 200vh; overflow: visible; z-index: 1; } & li {flex: 1; } & li > menu, & li > ul {left: 0; overflow: hidden; position: absolute; top: 99%; width: 100%; } & menu, & ul {display: flex; flex-direction: row; flex-wrap: wrap; justify-content: center; overflow: visible; position: relative; } } /** .ribbon **/ &.oldschool {/****** Borders ******/ & li:has(label):hover > menu, & li:has(label):hover > ul, & label:has(input:checked) + menu, & label:has(input:checked) + ul { border: 1px solid var(--border-color); } & > menu > li, & > ul > li { border-width: 0 0 0 1px; } & li { border-width: 0 0 1px 0; } & > ul, & > menu, & li > ul, & li > menu, & > menu > li:first-child, & > ul > li:first-child { border-width: 0; } & li, & li li:first-child { border-radius: 0 } & > menu > li:first-child, & > ul > li:first-child { border-radius: .5rem 0 0 .5rem } & > menu > li:last-child, & > ul > li:last-child { border-radius: 0 .5rem .5rem 0 } & menu, & ul { border-radius: .5rem } /****** Structure ******/ display: flex; flex-direction: row; flex-wrap: wrap; justify-content: center; position: relative; & a {text-align: center; } & label {flex: 1; justify-content: center; } & li li label {justify-content: start; } & label:has(input):hover, & label:has(input:checked) { flex: 1; } & label:has(input:checked) + menu, & label:has(input:checked) + ul {flex: 1; max-height: 200vh; overflow: visible; } & li {flex: 1; position: relative; } & li > menu, & li > ul {flex-direction: column; left: 0; overflow: hidden; position: absolute; top: 100%; z-index: 1; } & menu > li > menu, & ul > li > ul {top: 0; left: 99%; } & > menu, & > ul {display: flex; flex-wrap: wrap; justify-content: center; overflow: visible; flex-direction: row; } } /** .oldschool **/ } /** default **/ wijit-menu .sitemap {--height: var(--height); /****** Borders ******/ border-radius: 0; & li, & li > ul, & li > menu, & label > a {border: none; border-radius: 0; } /****** Text ******/ & a { color: var(--text-color); } & a:hover { color: var(--accent); } & label, & label a {font-weight: bold; font-size: 1.1rem; } & li:has(label) {margin-bottom: 10px; } & li:has(label) > menu, & li:has(label) > ul {padding-left: 1rem } /**** Shadows ****/ & li > menu, & li > ul, & a[href]:active { box-shadow: none } /****** Structure ******/ display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, max-content)); gap: 1rem; list-style: none; margin: 0; padding: 0; width: 100%; & input {display: none; } & menu {border: 1px dotted var(--border-color); display: flex; flex-direction: column; flex-wrap: wrap; gap: .5rem; list-style: none; margin: 0; max-height: var(--height); padding: 0; width: max-content; } & menu menu {border: none; } & menu menu menu {display: block; } } /** .sitemap **/ } /** layer **/ ',e}get content(){return this.#e}set content(e){let t=window,i=!1;const l=e.split(".");for(const n of l)try{t=t[n]}catch{i=`window.${e} is undefined`}if(i)console.error(i);else{for(const e of t.querySelectorAll("li"))this.hasChildMenu(e)&&(this.hasLabel(e)||this.addLabel(e));this.append(t.cloneNode(!0)),this.replaceClassName(this.type)}}get expand(){return this.#t}set expand(e){switch(e){case null:case!1:case"false":e=!1;break;default:e=!0}this.#t=e,e?this.expandMenu():this.closeMenu()}get height(){return this.#i}set height(e){this.#i=e,this.style.setProperty("--height",e)}get nohover(){return this.#l}set nohover(e){switch(e){case null:case!1:case"false":e=!1;break;default:e=!0}this.#l=e,this.setHover(!e)}get speed(){return this.#n}set speed(e){/\d+$/.test(e)&&(e+="s"),this.#n=e,this.style.setProperty("--speed",e)}get type(){return this.#o}set type(e){this.#o=e,this.replaceClassName(e)}}document.addEventListener("DOMContentLoaded",(()=>{customElements.get("wijit-menu")||customElements.define("wijit-menu",WijitMenu)}));
